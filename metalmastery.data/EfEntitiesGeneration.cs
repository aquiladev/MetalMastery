//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MetalMastery.Data.Entities", "FK_ThingFormat", "Formats", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MetalMastery.Data.FormatSet), "Things", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.ThingSet), true)]
[assembly: EdmRelationshipAttribute("MetalMastery.Data.Entities", "FK_ThingMaterial", "Materials", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MetalMastery.Data.MaterialSet), "Things", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.ThingSet), true)]
[assembly: EdmRelationshipAttribute("MetalMastery.Data.Entities", "FK_OrderStateOrder", "StateOrders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MetalMastery.Data.StateOrderSet), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.OrderSet), true)]
[assembly: EdmRelationshipAttribute("MetalMastery.Data.Entities", "FK_OrderThing", "Things", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MetalMastery.Data.ThingSet), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.OrderSet), true)]
[assembly: EdmRelationshipAttribute("MetalMastery.Data.Entities", "FK_UserOrder", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MetalMastery.Data.UserSet), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.OrderSet), true)]
[assembly: EdmRelationshipAttribute("MetalMastery.Data.Entities", "FK_UserRole", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MetalMastery.Data.RoleSet), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.UserSet), true)]
[assembly: EdmRelationshipAttribute("MetalMastery.Data.Entities", "FK_ThingState", "States", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MetalMastery.Data.StateSet), "Things", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.ThingSet), true)]
[assembly: EdmRelationshipAttribute("MetalMastery.Data.Entities", "ThingTag", "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.TagSet), "Things", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MetalMastery.Data.ThingSet))]

#endregion

namespace MetalMastery.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MmDataContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MmDataContext object using the connection string found in the 'MmDataContext' section of the application configuration file.
        /// </summary>
        public MmDataContext() : base("name=MmDataContext", "MmDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MmDataContext object.
        /// </summary>
        public MmDataContext(string connectionString) : base(connectionString, "MmDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MmDataContext object.
        /// </summary>
        public MmDataContext(EntityConnection connection) : base(connection, "MmDataContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormatSet> Format
        {
            get
            {
                if ((_Format == null))
                {
                    _Format = base.CreateObjectSet<FormatSet>("Format");
                }
                return _Format;
            }
        }
        private ObjectSet<FormatSet> _Format;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MaterialSet> Material
        {
            get
            {
                if ((_Material == null))
                {
                    _Material = base.CreateObjectSet<MaterialSet>("Material");
                }
                return _Material;
            }
        }
        private ObjectSet<MaterialSet> _Material;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderSet> Order
        {
            get
            {
                if ((_Order == null))
                {
                    _Order = base.CreateObjectSet<OrderSet>("Order");
                }
                return _Order;
            }
        }
        private ObjectSet<OrderSet> _Order;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleSet> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<RoleSet>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<RoleSet> _Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateOrderSet> StateOrder
        {
            get
            {
                if ((_StateOrder == null))
                {
                    _StateOrder = base.CreateObjectSet<StateOrderSet>("StateOrder");
                }
                return _StateOrder;
            }
        }
        private ObjectSet<StateOrderSet> _StateOrder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateSet> State
        {
            get
            {
                if ((_State == null))
                {
                    _State = base.CreateObjectSet<StateSet>("State");
                }
                return _State;
            }
        }
        private ObjectSet<StateSet> _State;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TagSet> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<TagSet>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<TagSet> _Tag;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThingSet> Thing
        {
            get
            {
                if ((_Thing == null))
                {
                    _Thing = base.CreateObjectSet<ThingSet>("Thing");
                }
                return _Thing;
            }
        }
        private ObjectSet<ThingSet> _Thing;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSet> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<UserSet>("User");
                }
                return _User;
            }
        }
        private ObjectSet<UserSet> _User;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Format EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormat(FormatSet formatSet)
        {
            base.AddObject("Format", formatSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Material EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMaterial(MaterialSet materialSet)
        {
            base.AddObject("Material", materialSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Order EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrder(OrderSet orderSet)
        {
            base.AddObject("Order", orderSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRole(RoleSet roleSet)
        {
            base.AddObject("Role", roleSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StateOrder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStateOrder(StateOrderSet stateOrderSet)
        {
            base.AddObject("StateOrder", stateOrderSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the State EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToState(StateSet stateSet)
        {
            base.AddObject("State", stateSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tag EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTag(TagSet tagSet)
        {
            base.AddObject("Tag", tagSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Thing EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThing(ThingSet thingSet)
        {
            base.AddObject("Thing", thingSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(UserSet userSet)
        {
            base.AddObject("User", userSet);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="FormatSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormatSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormatSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FormatSet CreateFormatSet(global::System.Guid id, global::System.String name)
        {
            FormatSet formatSet = new FormatSet();
            formatSet.Id = id;
            formatSet.Name = name;
            return formatSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_ThingFormat", "Things")]
        public EntityCollection<ThingSet> Things
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ThingSet>("MetalMastery.Data.Entities.FK_ThingFormat", "Things");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ThingSet>("MetalMastery.Data.Entities.FK_ThingFormat", "Things", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="MaterialSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MaterialSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MaterialSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MaterialSet CreateMaterialSet(global::System.Guid id, global::System.String name)
        {
            MaterialSet materialSet = new MaterialSet();
            materialSet.Id = id;
            materialSet.Name = name;
            return materialSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_ThingMaterial", "Things")]
        public EntityCollection<ThingSet> Things
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ThingSet>("MetalMastery.Data.Entities.FK_ThingMaterial", "Things");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ThingSet>("MetalMastery.Data.Entities.FK_ThingMaterial", "Things", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="OrderSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="stateOrderId">Initial value of the StateOrderId property.</param>
        /// <param name="thingId">Initial value of the ThingId property.</param>
        public static OrderSet CreateOrderSet(global::System.Guid id, global::System.DateTime createDate, global::System.Guid userId, global::System.Guid stateOrderId, global::System.Guid thingId)
        {
            OrderSet orderSet = new OrderSet();
            orderSet.Id = id;
            orderSet.CreateDate = createDate;
            orderSet.UserId = userId;
            orderSet.StateOrderId = stateOrderId;
            orderSet.ThingId = thingId;
            return orderSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StateOrderId
        {
            get
            {
                return _StateOrderId;
            }
            set
            {
                OnStateOrderIdChanging(value);
                ReportPropertyChanging("StateOrderId");
                _StateOrderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateOrderId");
                OnStateOrderIdChanged();
            }
        }
        private global::System.Guid _StateOrderId;
        partial void OnStateOrderIdChanging(global::System.Guid value);
        partial void OnStateOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ThingId
        {
            get
            {
                return _ThingId;
            }
            set
            {
                OnThingIdChanging(value);
                ReportPropertyChanging("ThingId");
                _ThingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThingId");
                OnThingIdChanged();
            }
        }
        private global::System.Guid _ThingId;
        partial void OnThingIdChanging(global::System.Guid value);
        partial void OnThingIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_OrderStateOrder", "StateOrders")]
        public StateOrderSet StateOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrderSet>("MetalMastery.Data.Entities.FK_OrderStateOrder", "StateOrders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrderSet>("MetalMastery.Data.Entities.FK_OrderStateOrder", "StateOrders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateOrderSet> StateOrdersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateOrderSet>("MetalMastery.Data.Entities.FK_OrderStateOrder", "StateOrders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateOrderSet>("MetalMastery.Data.Entities.FK_OrderStateOrder", "StateOrders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_OrderThing", "Things")]
        public ThingSet Things
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThingSet>("MetalMastery.Data.Entities.FK_OrderThing", "Things").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThingSet>("MetalMastery.Data.Entities.FK_OrderThing", "Things").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThingSet> ThingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThingSet>("MetalMastery.Data.Entities.FK_OrderThing", "Things");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ThingSet>("MetalMastery.Data.Entities.FK_OrderThing", "Things", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_UserOrder", "Users")]
        public UserSet Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("MetalMastery.Data.Entities.FK_UserOrder", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("MetalMastery.Data.Entities.FK_UserOrder", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserSet> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserSet>("MetalMastery.Data.Entities.FK_UserOrder", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserSet>("MetalMastery.Data.Entities.FK_UserOrder", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="RoleSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static RoleSet CreateRoleSet(global::System.Guid id, global::System.String name)
        {
            RoleSet roleSet = new RoleSet();
            roleSet.Id = id;
            roleSet.Name = name;
            return roleSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_UserRole", "Users")]
        public EntityCollection<UserSet> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSet>("MetalMastery.Data.Entities.FK_UserRole", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSet>("MetalMastery.Data.Entities.FK_UserRole", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="StateOrderSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateOrderSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateOrderSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static StateOrderSet CreateStateOrderSet(global::System.Guid id, global::System.String name)
        {
            StateOrderSet stateOrderSet = new StateOrderSet();
            stateOrderSet.Id = id;
            stateOrderSet.Name = name;
            return stateOrderSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_OrderStateOrder", "Orders")]
        public EntityCollection<OrderSet> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderSet>("MetalMastery.Data.Entities.FK_OrderStateOrder", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderSet>("MetalMastery.Data.Entities.FK_OrderStateOrder", "Orders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="StateSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static StateSet CreateStateSet(global::System.Guid id, global::System.String name)
        {
            StateSet stateSet = new StateSet();
            stateSet.Id = id;
            stateSet.Name = name;
            return stateSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_ThingState", "Things")]
        public EntityCollection<ThingSet> Things
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ThingSet>("MetalMastery.Data.Entities.FK_ThingState", "Things");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ThingSet>("MetalMastery.Data.Entities.FK_ThingState", "Things", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="TagSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TagSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TagSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TagSet CreateTagSet(global::System.Guid id, global::System.String name)
        {
            TagSet tagSet = new TagSet();
            tagSet.Id = id;
            tagSet.Name = name;
            return tagSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "ThingTag", "Things")]
        public EntityCollection<ThingSet> Things
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ThingSet>("MetalMastery.Data.Entities.ThingTag", "Things");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ThingSet>("MetalMastery.Data.Entities.ThingTag", "Things", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="ThingSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThingSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ThingSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="showOnHome">Initial value of the ShowOnHome property.</param>
        /// <param name="showForAll">Initial value of the ShowForAll property.</param>
        /// <param name="formatId">Initial value of the FormatId property.</param>
        /// <param name="imageRes">Initial value of the ImageRes property.</param>
        /// <param name="materialId">Initial value of the MaterialId property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        public static ThingSet CreateThingSet(global::System.Guid id, global::System.String name, global::System.String description, global::System.Boolean showOnHome, global::System.Boolean showForAll, global::System.Guid formatId, global::System.Byte[] imageRes, global::System.Guid materialId, global::System.Guid stateId)
        {
            ThingSet thingSet = new ThingSet();
            thingSet.Id = id;
            thingSet.Name = name;
            thingSet.Description = description;
            thingSet.ShowOnHome = showOnHome;
            thingSet.ShowForAll = showForAll;
            thingSet.FormatId = formatId;
            thingSet.ImageRes = imageRes;
            thingSet.MaterialId = materialId;
            thingSet.StateId = stateId;
            return thingSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowOnHome
        {
            get
            {
                return _ShowOnHome;
            }
            set
            {
                OnShowOnHomeChanging(value);
                ReportPropertyChanging("ShowOnHome");
                _ShowOnHome = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowOnHome");
                OnShowOnHomeChanged();
            }
        }
        private global::System.Boolean _ShowOnHome;
        partial void OnShowOnHomeChanging(global::System.Boolean value);
        partial void OnShowOnHomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowForAll
        {
            get
            {
                return _ShowForAll;
            }
            set
            {
                OnShowForAllChanging(value);
                ReportPropertyChanging("ShowForAll");
                _ShowForAll = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowForAll");
                OnShowForAllChanged();
            }
        }
        private global::System.Boolean _ShowForAll;
        partial void OnShowForAllChanging(global::System.Boolean value);
        partial void OnShowForAllChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FormatId
        {
            get
            {
                return _FormatId;
            }
            set
            {
                OnFormatIdChanging(value);
                ReportPropertyChanging("FormatId");
                _FormatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormatId");
                OnFormatIdChanged();
            }
        }
        private global::System.Guid _FormatId;
        partial void OnFormatIdChanging(global::System.Guid value);
        partial void OnFormatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Int32> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Int32> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image1
        {
            get
            {
                return StructuralObject.GetValidValue(_Image1);
            }
            set
            {
                OnImage1Changing(value);
                ReportPropertyChanging("Image1");
                _Image1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image1");
                OnImage1Changed();
            }
        }
        private global::System.Byte[] _Image1;
        partial void OnImage1Changing(global::System.Byte[] value);
        partial void OnImage1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Image2
        {
            get
            {
                return StructuralObject.GetValidValue(_Image2);
            }
            set
            {
                OnImage2Changing(value);
                ReportPropertyChanging("Image2");
                _Image2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Image2");
                OnImage2Changed();
            }
        }
        private global::System.Byte[] _Image2;
        partial void OnImage2Changing(global::System.Byte[] value);
        partial void OnImage2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] ImageRes
        {
            get
            {
                return StructuralObject.GetValidValue(_ImageRes);
            }
            set
            {
                OnImageResChanging(value);
                ReportPropertyChanging("ImageRes");
                _ImageRes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageRes");
                OnImageResChanged();
            }
        }
        private global::System.Byte[] _ImageRes;
        partial void OnImageResChanging(global::System.Byte[] value);
        partial void OnImageResChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MaterialId
        {
            get
            {
                return _MaterialId;
            }
            set
            {
                OnMaterialIdChanging(value);
                ReportPropertyChanging("MaterialId");
                _MaterialId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaterialId");
                OnMaterialIdChanged();
            }
        }
        private global::System.Guid _MaterialId;
        partial void OnMaterialIdChanging(global::System.Guid value);
        partial void OnMaterialIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Guid _StateId;
        partial void OnStateIdChanging(global::System.Guid value);
        partial void OnStateIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_ThingFormat", "Formats")]
        public FormatSet Formats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatSet>("MetalMastery.Data.Entities.FK_ThingFormat", "Formats").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatSet>("MetalMastery.Data.Entities.FK_ThingFormat", "Formats").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormatSet> FormatsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormatSet>("MetalMastery.Data.Entities.FK_ThingFormat", "Formats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormatSet>("MetalMastery.Data.Entities.FK_ThingFormat", "Formats", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_ThingMaterial", "Materials")]
        public MaterialSet Materials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialSet>("MetalMastery.Data.Entities.FK_ThingMaterial", "Materials").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialSet>("MetalMastery.Data.Entities.FK_ThingMaterial", "Materials").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MaterialSet> MaterialsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MaterialSet>("MetalMastery.Data.Entities.FK_ThingMaterial", "Materials");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MaterialSet>("MetalMastery.Data.Entities.FK_ThingMaterial", "Materials", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_OrderThing", "Orders")]
        public EntityCollection<OrderSet> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderSet>("MetalMastery.Data.Entities.FK_OrderThing", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderSet>("MetalMastery.Data.Entities.FK_OrderThing", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_ThingState", "States")]
        public StateSet States
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateSet>("MetalMastery.Data.Entities.FK_ThingState", "States").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateSet>("MetalMastery.Data.Entities.FK_ThingState", "States").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateSet> StatesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateSet>("MetalMastery.Data.Entities.FK_ThingState", "States");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateSet>("MetalMastery.Data.Entities.FK_ThingState", "States", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "ThingTag", "Tags")]
        public EntityCollection<TagSet> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TagSet>("MetalMastery.Data.Entities.ThingTag", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TagSet>("MetalMastery.Data.Entities.ThingTag", "Tags", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MetalMastery.Data.Entities", Name="UserSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UserSet CreateUserSet(global::System.Guid id, global::System.String email, global::System.String password, global::System.Guid roleId)
        {
            UserSet userSet = new UserSet();
            userSet.Id = id;
            userSet.Email = email;
            userSet.Password = password;
            userSet.RoleId = roleId;
            return userSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_UserOrder", "Orders")]
        public EntityCollection<OrderSet> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderSet>("MetalMastery.Data.Entities.FK_UserOrder", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderSet>("MetalMastery.Data.Entities.FK_UserOrder", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MetalMastery.Data.Entities", "FK_UserRole", "Roles")]
        public RoleSet Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleSet>("MetalMastery.Data.Entities.FK_UserRole", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleSet>("MetalMastery.Data.Entities.FK_UserRole", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoleSet> RolesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleSet>("MetalMastery.Data.Entities.FK_UserRole", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoleSet>("MetalMastery.Data.Entities.FK_UserRole", "Roles", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
