@using MetalMastery.Web.App_LocalResources
@model MetalMastery.Web.Areas.Admin.Models.ThingModel
<table>
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShowOnHome)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ShowOnHome)
                @Html.ValidationMessageFor(model => model.ShowOnHome)
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ShowForAll)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ShowForAll)
                @Html.ValidationMessageFor(model => model.ShowForAll)
            </div>
        </td>
    </tr>
    @*<tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Rating)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.Rating)
                @Html.ValidationMessageFor(model => model.Rating)
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Comment)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.Comment)
                @Html.ValidationMessageFor(model => model.Comment)
            </div>
        </td>
    </tr>*@
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.ImageRes)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.ImageRes)
                @Html.ValidationMessageFor(model => model.ImageRes)
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Image1)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.Image1)
                @Html.ValidationMessageFor(model => model.Image1)
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="editor-label">
                @Html.LabelFor(model => model.Image2)
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.EditorFor(model => model.Image2)
                @Html.ValidationMessageFor(model => model.Image2)
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="editor-label">
                @MmResources.Material
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.MaterialId,
                            ((IEnumerable<MetalMastery.Core.Domain.Material>)ViewBag.Materials).Select(option => new SelectListItem
                                                                                                                     {
                                                                                                                         Text = (option == null ? "None" : option.Name),
                                                                                                                         Value = option.Id.ToString(),
                                                                                                                         Selected = (Model != null) && (option.Id == Model.MaterialId)
                                                                                                                     }), MmResources.Choose)
                @Html.ValidationMessageFor(model => model.MaterialId)
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <div class="editor-label">
                @MmResources.Format
            </div>
        </td>
        <td>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.FormatId,
                            ((IEnumerable<MetalMastery.Core.Domain.Format>)ViewBag.Formats).Select(option => new SelectListItem
                                                                                                                 {
                                                                                                                     Text = (option == null ? "None" : option.Name),
                                                                                                                     Value = option.Id.ToString(),
                                                                                                                     Selected = (Model != null) && (option.Id == Model.FormatId)
                                                                                                                 }), MmResources.Choose)
                @Html.ValidationMessageFor(model => model.FormatId)
            </div>
        </td>
        <tr>
            <td>
                <div class="editor-label">
                    @MmResources.State
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.StateId,
                            ((IEnumerable<MetalMastery.Core.Domain.ThingState>)ViewBag.States).Select(option => new SelectListItem
                                                                                                                    {
                                                                                                                        Text = (option == null ? "None" : option.Name),
                                                                                                                        Value = option.Id.ToString(),
                                                                                                                        Selected = (Model != null) && (option.Id == Model.StateId)
                                                                                                                    }), MmResources.Choose)
                    @Html.ValidationMessageFor(model => model.StateId)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Price)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Price)
                    @Html.ValidationMessageFor(model => model.Price)
                </div>
            </td>
        </tr>
    </tr>
</table>
<script type="text/javascript">
    tinyMCE.init({
        // General options
        mode: "textareas",
        theme: "advanced",
        plugins: "autolink,lists,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,contextmenu,paste,directionality,noneditable,visualchars,nonbreaking,xhtmlxtras,template,advlist",

        // Theme options
        theme_advanced_buttons1: "bold,italic,underline,strikethrough,cut,copy,paste,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,justifyleft,justifycenter,justifyright,justifyfull,formatselect,fontselect,fontsizeselect",
        theme_advanced_buttons2: "link,unlink,anchor,image,cleanup,code,|,preview,|,tablecontrols,|,hr,removeformat,visualaid",
        theme_advanced_buttons3: "forecolor,backcolor,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,ltr,rtl,|,insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak",
        theme_advanced_toolbar_location: "top",
        theme_advanced_toolbar_align: "left",
        theme_advanced_statusbar_location: "bottom",
        theme_advanced_resizing: true,

        // Drop lists for link/image/media/template dialogs
        template_external_list_url: "lists/template_list.js",
        external_link_list_url: "lists/link_list.js",
        external_image_list_url: "lists/image_list.js",
        media_external_list_url: "lists/media_list.js",

        // Style formats
        style_formats: [
			{ title: 'Bold text', inline: 'b' },
			{ title: 'Red text', inline: 'span', styles: { color: '#ff0000'} },
			{ title: 'Red header', block: 'h1', styles: { color: '#ff0000'} },
			{ title: 'Example 1', inline: 'span', classes: 'example1' },
			{ title: 'Example 2', inline: 'span', classes: 'example2' },
			{ title: 'Table styles' },
			{ title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }
		],

        // Replace values for the template plugin
        template_replace_values: {
            username: "Some User",
            staffid: "991234"
        }
    });
</script>
